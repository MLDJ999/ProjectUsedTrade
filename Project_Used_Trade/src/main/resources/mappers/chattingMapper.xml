<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.itwillbs.mapper.ChattingMapper">
  
  	<!-- 채팅 게시글 list 가져오기 -->
	<select id="getCHATGROUPList" resultType="ChatGroupVO">
		select * from CHATGROUP
		order by chat_no desc
	</select>
	
	<!-- 자신을 뺀 모든 유저 리스트 가져오기 -->
	<select id = "getUserList" resultType = "MemberVO" parameterType="String">
		select * from member where userid != #{userid}
	</select>
	
	<!-- 채팅 게시글 등록 시 ALARM 테이블에도 등록 -->
	<insert id = "insertALARM" parameterType="String">
		INSERT INTO ALARM (userid, ALARM_type, ALARM_cdate, ALARM_prefix, chat_No) 
		VALUES (#{userid}, 'new_chat', NOW(), '${sender_name}님의 게시글 등록', #{chat_no});
	</insert>
	
	<!-- 채팅 게시글 등록 쿼리 -->
	<insert id="insertChat" parameterType="ChatGroupVO" useGeneratedKeys="true" keyProperty="chat_no">
	    INSERT INTO CHATGROUP (chat_title, userid, chat_date, user_name)
	    VALUES (#{chat_title}, #{userid}, NOW(), #{user_name})
	</insert>
	
	<!-- 채팅 멤버 추가 쿼리 -->
	<insert id = "addCHATMEMBER" parameterType="ChatGroupVO">
		insert into CHATMEMBER
		values(#{chat_no}, #{userid}, #{user_name}, #{auth_role}, 0)
	</insert>
	
	<!-- 해당 아이디에 대한 안읽은 ALARM 리스트 가져오기 -->
	<select id = "getALARMInfo" parameterType="String" resultType="AlarmVO">
		select * from ALARM where userid = #{userid}
	</select>	
	
	<!-- 읽은 알람 지우기 쿼리 -->
	<delete id = "deleteALARM" parameterType = "int">
		delete from ALARM where ALARM_no = #{ALARM_no}
	</delete>
	
	<!-- 채팅 가입하기 쿼리 -->
	<insert id = "joinCHATGROUP" parameterType="ChatMemberVO">
		insert into CHATMEMBER 
		values (#{chat_no}, #{userid}, #{user_name}, #{auth_role}, 0)
	</insert>
	
	
	<!-- =================================== 채팅 기능 쿼리 추가 =================================== -->
	<!-- 해당 채팅방의 메시지 리스트 가져오기 -->
	<select id = "messageList" parameterType="int" resultType="ChatMessageVO">
		select * from CHATMESSAGE where chat_no = #{chat_no}
	</select>
	
	<!-- 메시지 등록하기 -->
	<insert id = "insertMessage" parameterType="ChatMessageVO" useGeneratedKeys="true">
<!-- 		INSERT INTO CHATMESSAGE (message_id, chat_no, message_content, message_regdat, userid, unread_count, user_name) -->
<!-- 		VALUES (NULL, #{chat_no}, #{message_content}, DEFAULT, #{userid}, #{unread_count}, #{user_name}) -->
	INSERT INTO CHATMESSAGE (message_id, chat_no, message_content, message_regdat, userid, unread_count, user_name)
	VALUES (NULL, #{chat_no}, #{message_content}, DEFAULT, #{userid}, #{unread_count}, #{user_name})
	</insert>
	
	<!-- 나를 제외한 해당 방에 속한 사람들 안 읽은 메시지 개수 업데이트 -->
	<update id = "updateMessageCountExceptMe" parameterType="ChatMessageVO">
		update CHATMEMBER
		set
		msg_count = msg_count + 1
		where userid != #{userid}
		and chat_no = #{chat_no}
	</update>
	
	<!-- 해당 유저가 속하는 채팅방 가져오기 -->
	<select id = "getCHATGROUPListById" parameterType="String" resultType="ChatGroupVO">
	select A.*, B.msg_count from CHATGROUP A, CHATMEMBER B
	where A.chat_no = B.chat_no and
    B.userid = #{userid}
	</select>
	
	<!-- 채팅인원 목록 가져오기 -->
	<select id = "getCHATMEMBER" parameterType="int" resultType="ChatMemberVO">
		select * from CHATMEMBER
		where chat_no = #{chat_no}
	</select>
	
	<!-- 채팅들 읽음 처리 -->
	<update id = "readCHATMESSAGE" parameterType="ChatMessageVO">
		update CHATMEMBER
		set
		msg_count = 0
		where userid = #{userid}
		and chat_no = #{chat_no}
	</update>
	
	<!-- 해당 유저의 안읽은 메시지 개수 -->
	<select id = "getChatCnt" parameterType="string" resultType = "int">
		SELECT COALESCE(SUM(msg_count), 0) AS cnt FROM CHATMEMBER
    	WHERE userid = #{userid}
	</select>
	
	<!-- 채팅방 인원수 가져오기 -->
	<select id = "getMemberCount" parameterType="int" resultType = "int">
		select count(*) as cnt
		from CHATMEMBER
		where chat_no = #{chat_no}
	</select>
	
	<!-- 메시지 안읽은 유저 테이블에 삽입 -->
	<insert id = "insertUNREADMEMBER" parameterType="hashMap">
		insert into UNREADMEMBER (message_id, userid, chat_no) 
		values (#{message_id}, #{userid}, #{chat_no})
	</insert>
	
	<!-- 방 안에서 해당 메시지 읽음 카운트 -1 처리 -->
	<update id = "readMessageInRoom" parameterType = "ChatMessageVO">
		update CHATMESSAGE
		set unread_count = unread_count - 1
		where chat_no = #{chat_no}
		and message_id = #{message_id}
	</update>
	
	<!-- 안읽은 메시지 테이블에서 해당 방에 대한 유저의 행 삭제 -->
	<delete id = "deleteUnreadMsg" parameterType="ChatMessageVO">
		delete from UNREADMEMBER
		where chat_no = #{chat_no}
		and userid = #{userid}
	</delete>
	
	<!-- 메시지 안읽은 개수 가져오기 -->
	<select id = "getUnreadCntByUser" parameterType="ChatMessageVO" resultType = "int">
		select message_id from UNREADMEMBER
		where chat_no = #{chat_no}
		and userid = #{userid}
	</select>
	
	<!-- 가장 최신의 message_id 불러오기 -->
	<!-- UNREADMEMBER 테이블에 message_id를 넣기 위한 구문 -->
	<select id = "getMessageId" resultType="int" parameterType="ChatMessageVO">
		select max(message_id) from CHATMESSAGE
	</select>
	
	<!-- 가장 최신의 chat_no 불러오기 -->
	<select id = "getChatNo" resultType="int">
		select max(chat_no) from CHATGROUP
	</select>
	
	<!-- 게시글 번호로 member 테이블에 있는 유저 정보 가져오기 (userid) -->
	<select id = "getMemberFromTable" resultType = "String">
	select member.userid
	from member
	inner join board
	on
	member.userid = board.writer
	where board.bno = #{bno}
	</select>
	
	<!-- 게시글 번호로 member 테이블에 있는 유저 정보 가져오기 (user_name) -->
	<select id = "getUserNameFromTable" resultType = "String">
	select MEMBER.user_name
	from MEMBER
	inner join board
	on
	member.userid = board.writer
	where board.bno = #{bno}
	</select>
	
	

	
	
</mapper>